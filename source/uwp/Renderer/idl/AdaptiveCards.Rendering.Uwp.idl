#include <sdkddkver.h>

import "windowscontracts.idl";
import "inspectable.idl";
import "Windows.Foundation.idl";
import "Windows.UI.Xaml.idl";
import "Windows.Data.Json.idl";

namespace AdaptiveCards { namespace Rendering { namespace Uwp
{
    runtimeclass AdaptiveCardResourceResolvers;
    runtimeclass AdaptiveCardGetResourceStreamArgs;
    runtimeclass AdaptiveColorsConfig;
    runtimeclass AdaptiveHostConfig;
    runtimeclass RenderedAdaptiveCard;
    runtimeclass AdaptiveActionEventArgs;
    runtimeclass AdaptiveInputs;
    runtimeclass AdaptiveCardParseResult;
    runtimeclass AdaptiveHostConfigParseResult;

    runtimeclass AdaptiveElementParserRegistration;
    runtimeclass AdaptiveActionParserRegistration;
    runtimeclass AdaptiveElementRendererRegistration;
    runtimeclass AdaptiveRenderArgs;

    interface IAdaptiveCardResourceResolver;
    interface IAdaptiveCardElement;
    interface IAdaptiveActionElement;
    interface IAdaptiveColumn;
    interface IAdaptiveFact;
    interface IAdaptiveChoiceInput;
    interface IAdaptiveError;
    interface IAdaptiveWarning;
    interface IRenderedAdaptiveCard;
    interface IAdaptiveElementParser;
    interface IAdaptiveActionParser;
    interface IAdaptiveElementRenderer;

    enum TextSize
    {
        Small = 0,
        Default,
        Medium,
        Large,
        ExtraLarge
    };

    enum TextWeight
    {
        Lighter = 0,
        Default,
        Bolder
    };

    enum ForegroundColor
    {
        Default = 0,
        Dark,
        Light,
        Accent,
        Good,
        Warning,
        Attention
    };

    enum HAlignment
    {
        Left = 0,
        Center,
        Right
    };

    enum ElementType
    {
        Unsupported = 0,
        AdaptiveCard,
        TextBlock,
        Image,
        Container,
        Column,
        ColumnSet,
        FactSet,
        Fact,
        ImageSet,
        ChoiceInput,
        ChoiceSetInput,
        DateInput,
        NumberInput,
        TextInput,
        TimeInput,
        ToggleInput,
        Custom
    };

    enum ActionType
    {
        Unsupported = 0,
        ShowCard,
        Submit,
        OpenUrl,
        Custom
    };

    enum ImageStyle {
        Default = 0,
        Person
    };

    enum ImageSize {
        None = 0,
        Auto,
        Stretch,
        Small,
        Medium,
        Large
    };

    enum SeparatorThickness {
        Default = 0,
        Thick,
    };

    enum Spacing {
        Default = 0,
        None,
        Small,
        Medium,
        Large,
        ExtraLarge,
        Padding
    };

    enum ActionsOrientation {
        Vertical = 0,
        Horizontal
    };

    enum ActionAlignment {
        Left = 0,
        Center,
        Right,
        Stretch,
    };

    enum ActionMode {
        Inline = 0,
        Popup
    };

    enum ChoiceSetStyle {
        Compact = 0,
        Expanded
    };

    enum TextInputStyle {
        Text = 0,
        Tel,
        Url,
        Email,
    };

    enum ContainerStyle {
        None = 0,
        Default,
        Emphasis
    };

    enum ErrorStatusCode {
        InvalidJson = 0,
        RenderFailed,
        RequiredPropertyMissing,
        InvalidPropertyValue,
        UnsupportedParserOverride
    };

    enum WarningStatusCode {
        UnknownElementType = 0,
        UnknownPropertyOnElement,
        UnknownEnumValue,
        NoRendererForType,
        InteractivityNotSupported,
        MaxActionsExceeded,
        AssetLoadFailed,
        UnsupportedSchemaVersion,
    };

    declare
    {
        interface Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>;
        interface Windows.Foundation.Collections.IVector<IAdaptiveActionElement*>;
        interface Windows.Foundation.Collections.IVector<IAdaptiveColumn*>;
        interface Windows.Foundation.Collections.IVector<IAdaptiveFact*>;
        interface Windows.Foundation.Collections.IVector<IAdaptiveChoiceInput*>;
        interface Windows.Foundation.Collections.IVector<IAdaptiveError*>;
        interface Windows.Foundation.Collections.IVector<IAdaptiveWarning*>;
        interface Windows.Foundation.Collections.IObservableVector<IAdaptiveCardElement*>;
        interface Windows.Foundation.Collections.IObservableVector<IAdaptiveColumn*>;
        interface Windows.Foundation.Collections.IObservableVector<IAdaptiveColumn*>;
        interface Windows.Foundation.IAsyncOperation<RenderedAdaptiveCard*>;
        interface Windows.Foundation.IReference<Windows.UI.Text.FontWeight>;
    }

    interface IAdaptiveCardElement : IInspectable
    {
        ElementType ElementType{ get; };
        String ElementTypeString{ get; };
        Spacing Spacing;
        Boolean Separator;
        String Id;
        Windows.Data.Json.JsonObject AdditionalProperties;

        Windows.Data.Json.JsonObject ToJson();
    };

    runtimeclass AdaptiveSeparator
    {
        AdaptiveSeparator();
        ForegroundColor Color;
        SeparatorThickness Thickness;
    };

    runtimeclass AdaptiveTextBlock : IAdaptiveCardElement
    {
        AdaptiveTextBlock();
        TextSize Size;
        TextWeight Weight;
        ForegroundColor Color;
        String Text;
        Boolean IsSubtle;
        Boolean Wrap;
        HAlignment HorizontalAlignment;
        UInt32 MaxLines;
        String Language;
    };

    runtimeclass AdaptiveCard
    {
        AdaptiveCard();

        Windows.Foundation.Collections.IVector<IAdaptiveCardElement*> Body{ get; };
        Windows.Foundation.Collections.IVector<IAdaptiveActionElement*> Actions{ get; };

        ElementType ElementType{ get; };
        String Version;
        String FallbackText;
        Windows.Foundation.Uri BackgroundImage;
        String Speak;
        ContainerStyle Style;

        Windows.Data.Json.JsonObject ToJson();
        
        [overload("FromJson")]
        static AdaptiveCardParseResult FromJson(Windows.Data.Json.JsonObject adaptiveJson);

        [overload("FromJson")]
        static AdaptiveCardParseResult FromJsonWithParserRegistration(
            Windows.Data.Json.JsonObject adaptiveJson,
            AdaptiveElementParserRegistration elementRegistration,
            AdaptiveActionParserRegistration actionRegistration);

        [overload("FromJsonString")]
        static AdaptiveCardParseResult FromJsonString(String adaptiveJson);

        [overload("FromJsonString")]
        static AdaptiveCardParseResult FromJsonStringWithParserRegistration(
            String adaptiveJson,
            AdaptiveElementParserRegistration elementRegistration,
            AdaptiveActionParserRegistration actionRegistration);
    };

    runtimeclass AdaptiveCardParseResult
    {
        AdaptiveCardParseResult();
        AdaptiveCard AdaptiveCard{ get; };
        Windows.Foundation.Collections.IVector<IAdaptiveError*> Errors{ get; };
        Windows.Foundation.Collections.IVector<IAdaptiveWarning*> Warnings{ get; };
    };

    interface IAdaptiveImage : IInspectable 
    {
        Windows.Foundation.Uri Url;
        ImageStyle Style;
        ImageSize Size;
        HAlignment HorizontalAlignment;
        String AltText;
        IAdaptiveActionElement SelectAction;
    };

    runtimeclass AdaptiveImage : IAdaptiveImage, IAdaptiveCardElement
    {
        AdaptiveImage();
    };

    runtimeclass AdaptiveImageSet : IAdaptiveCardElement
    {
        AdaptiveImageSet();
        Windows.Foundation.Collections.IVector<IAdaptiveImage*> Images{ get; };
        ImageSize ImageSize;
    };

    interface IAdaptiveInputElement : IInspectable
    {
        Boolean IsRequired;
    };

    interface IAdaptiveChoiceInput 
    {
        ElementType ElementType{ get; };

        String Title;
        String Value;
    };

    runtimeclass AdaptiveChoiceInput : IAdaptiveChoiceInput
    {
        AdaptiveChoiceInput();
    };

    runtimeclass AdaptiveChoiceSetInput : IAdaptiveInputElement, IAdaptiveCardElement
    {
        AdaptiveChoiceSetInput();
    
        String Value;
        Boolean IsMultiSelect;
        ChoiceSetStyle ChoiceSetStyle;

        Windows.Foundation.Collections.IVector<IAdaptiveChoiceInput*> Choices{ get; };
    };

    runtimeclass AdaptiveDateInput : IAdaptiveInputElement, IAdaptiveCardElement
    {
        AdaptiveDateInput();

        String Max;
        String Min;
        String Placeholder;
        String Value;
    };

    runtimeclass AdaptiveNumberInput : IAdaptiveInputElement, IAdaptiveCardElement
    {
        AdaptiveNumberInput();

        INT32 Max;
        INT32 Min;
        String Placeholder;
        INT32 Value;
    };

    runtimeclass AdaptiveTextInput : IAdaptiveInputElement, IAdaptiveCardElement
    {
        AdaptiveTextInput();

        Boolean IsMultiline;
        UINT32 MaxLength;
        String Placeholder;
        String Value;
        TextInputStyle TextInputStyle;
    };

    runtimeclass AdaptiveTimeInput : IAdaptiveInputElement, IAdaptiveCardElement
    {
        AdaptiveTimeInput();

        String Max;
        String Min;
        String Placeholder;
        String Value;
    };

    runtimeclass AdaptiveToggleInput : IAdaptiveInputElement, IAdaptiveCardElement
    {
        AdaptiveToggleInput();

        String Title;
        String Value;
        String ValueOff;
        String ValueOn;
    };

    runtimeclass AdaptiveContainer : IAdaptiveCardElement
    {
        AdaptiveContainer();
        ContainerStyle Style;
        Windows.Foundation.Collections.IVector<IAdaptiveCardElement*> Items{ get; };
        IAdaptiveActionElement SelectAction;
    };

    interface IAdaptiveColumn : IInspectable
    {
        String Width;
        ContainerStyle Style;
        Windows.Foundation.Collections.IVector<IAdaptiveCardElement*> Items{ get; };
        IAdaptiveActionElement SelectAction;
    };

    runtimeclass AdaptiveColumn : IAdaptiveColumn, IAdaptiveCardElement
    {
        AdaptiveColumn();
    };

    runtimeclass AdaptiveColumnSet : IAdaptiveCardElement
    {
        AdaptiveColumnSet();
        Windows.Foundation.Collections.IVector<IAdaptiveColumn*> Columns{ get; };
        IAdaptiveActionElement SelectAction;
    };

    interface IAdaptiveFact : IInspectable
    {
        ElementType ElementType{ get; };
        String Title;
        String Value;
    };

    runtimeclass AdaptiveFact : IAdaptiveFact
    {
        AdaptiveFact();
    };

    runtimeclass AdaptiveFactSet : IAdaptiveCardElement
    {
        AdaptiveFactSet();
        Windows.Foundation.Collections.IVector<IAdaptiveFact*> Facts{ get; };
    };

    runtimeclass AdaptiveCardRenderer 
    {
        AdaptiveCardRenderer();
        AdaptiveCardResourceResolvers ResourceResolvers{ get; };
        AdaptiveHostConfig HostConfig;

        Windows.UI.Xaml.ResourceDictionary OverrideStyles;

        void SetFixedDimensions(UInt32 desiredWidth, UInt32 desiredHeight);
        void ResetFixedDimensions();

        RenderedAdaptiveCard RenderAdaptiveCard(AdaptiveCard adaptiveCard);
        RenderedAdaptiveCard RenderAdaptiveCardFromJsonString(String adaptiveJson);
        RenderedAdaptiveCard RenderAdaptiveCardFromJson(Windows.Data.Json.JsonObject adaptiveJson);

        AdaptiveElementRendererRegistration ElementRenderers{ get; };
    };

    runtimeclass AdaptiveActionEventArgs
    {
        IAdaptiveActionElement Action{ get; };
        AdaptiveInputs Inputs{ get; };
    }

    runtimeclass AdaptiveContainerStyleDefinition
    {
        AdaptiveContainerStyleDefinition();
        Windows.UI.Color BackgroundColor;
        AdaptiveColorsConfig ForegroundColors;
    };

    runtimeclass AdaptiveContainerStylesDefinition
    {
        AdaptiveContainerStylesDefinition();
        AdaptiveContainerStyleDefinition Default;
        AdaptiveContainerStyleDefinition Emphasis;
    };

    runtimeclass AdaptiveFontSizesConfig 
    {
        AdaptiveFontSizesConfig();
        UInt32 Small;
        UInt32 Default;
        UInt32 Medium;
        UInt32 Large;
        UInt32 ExtraLarge;
    };

    runtimeclass AdaptiveFontWeightsConfig
    {
        AdaptiveFontWeightsConfig();
        UInt16 Lighter;
        UInt16 Default;
        UInt16 Bolder;
    };

    runtimeclass AdaptiveColorConfig
    {
        AdaptiveColorConfig();
        Windows.UI.Color Default;
        Windows.UI.Color Subtle;
    };

    runtimeclass AdaptiveColorsConfig
    {
        AdaptiveColorsConfig();
        AdaptiveColorConfig Default;
        AdaptiveColorConfig Accent;
        AdaptiveColorConfig Dark;
        AdaptiveColorConfig Light;
        AdaptiveColorConfig Good;
        AdaptiveColorConfig Warning;
        AdaptiveColorConfig Attention;
    };

    runtimeclass AdaptiveTextConfig
    {
        AdaptiveTextConfig();
        TextWeight Weight;
        TextSize Size;
        ForegroundColor Color;
        Boolean IsSubtle;
        Boolean Wrap;
        UInt32 MaxWidth;
    };

    runtimeclass AdaptiveSpacingConfig
    {
        AdaptiveSpacingConfig();
        UInt32 Small;
        UInt32 Default;
        UInt32 Medium;
        UInt32 Large;
        UInt32 ExtraLarge;
        UInt32 Padding;
    };

    runtimeclass AdaptiveSeparatorConfig
    {
        AdaptiveSeparatorConfig();
        UInt32 LineThickness;
        Windows.UI.Color LineColor;
    };

    runtimeclass AdaptiveImageSizesConfig
    {
        AdaptiveImageSizesConfig();
        UInt32 Small;
        UInt32 Medium;
        UInt32 Large;
    };

    runtimeclass AdaptiveImageSetConfig
    {
        AdaptiveImageSetConfig();
        ImageSize ImageSize;
        UInt32 MaxImageHeight;
    };

    runtimeclass AdaptiveImageConfig
    {
        AdaptiveImageConfig();
        ImageSize ImageSize;
    };

    runtimeclass AdaptiveCardConfig
    {
        AdaptiveCardConfig();
        Boolean AllowCustomStyle;
    };

    runtimeclass AdaptiveFactSetConfig
    {
        AdaptiveFactSetConfig();
        AdaptiveTextConfig Title;
        AdaptiveTextConfig Value;
        UInt32 Spacing;
    };

    runtimeclass AdaptiveShowCardActionConfig
    {
        AdaptiveShowCardActionConfig();
        ActionMode ActionMode;
        ContainerStyle Style;
        UInt32 InlineTopMargin;
    };

    runtimeclass AdaptiveActionsConfig
    {
        AdaptiveActionsConfig();
        AdaptiveShowCardActionConfig ShowCard;
        ActionsOrientation ActionsOrientation;
        ActionAlignment ActionAlignment;
        UInt32 ButtonSpacing;
        UInt32 MaxActions;
        Spacing Spacing;
    };

    runtimeclass AdaptiveHostConfig
    {
        AdaptiveHostConfig();
        String FontFamily;
        AdaptiveFontSizesConfig FontSizes;
        AdaptiveFontWeightsConfig FontWeights;
        Boolean SupportsInteractivity;
        AdaptiveContainerStylesDefinition ContainerStyles;
        AdaptiveImageSizesConfig ImageSizes;
        AdaptiveSeparatorConfig Separator;
        AdaptiveSpacingConfig Spacing;
        AdaptiveCardConfig AdaptiveCard;
        AdaptiveImageSetConfig ImageSet;
        AdaptiveImageConfig Image;
        AdaptiveFactSetConfig FactSet;
        AdaptiveActionsConfig Actions;

        static AdaptiveHostConfigParseResult FromJsonString(String hostConfigJson);
        static AdaptiveHostConfigParseResult FromJson(Windows.Data.Json.JsonObject hostConfigJson);
    };

    runtimeclass AdaptiveHostConfigParseResult
    {
        AdaptiveHostConfigParseResult();
        AdaptiveHostConfig HostConfig{ get; };
        Windows.Foundation.Collections.IVector<IAdaptiveError*> Errors{ get; };
    };

    interface IAdaptiveActionElement : IInspectable
    {
        ActionType ActionType{ get; };
        String ActionTypeString{ get; };

        String Title;
        String Id;
        Windows.Data.Json.JsonObject AdditionalProperties;

        Windows.Data.Json.JsonObject ToJson();
    };

    runtimeclass AdaptiveOpenUrlAction : IAdaptiveActionElement
    {
        AdaptiveOpenUrlAction();
        Windows.Foundation.Uri Url;
    };

    runtimeclass AdaptiveShowCardAction : IAdaptiveActionElement
    {
        AdaptiveShowCardAction();
        AdaptiveCard Card;
    };


    runtimeclass AdaptiveSubmitAction : IAdaptiveActionElement
    {
        AdaptiveSubmitAction();
        Windows.Data.Json.JsonValue DataJson;
    };

    runtimeclass AdaptiveCardResourceResolvers
    {
        AdaptiveCardResourceResolvers();
        void Set(String scheme, IAdaptiveCardResourceResolver resolver);
        IAdaptiveCardResourceResolver Get(String scheme);
    };

    interface IAdaptiveCardResourceResolver : IInspectable
    {
        Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream*> GetResourceStreamAsync(AdaptiveCardGetResourceStreamArgs args);
    };

    runtimeclass AdaptiveCardGetResourceStreamArgs
    {
        AdaptiveCardGetResourceStreamArgs(Windows.Foundation.Uri uri);
        Windows.Foundation.Uri Url{ get; };
    };

    [
        uuid(7bf9ceac-105c-421a-8b4e-8e5be9ead986),
        version(NTDDI_WIN10_RS1),
        exclusiveto(RenderedAdaptiveCard)
    ]
    interface IRenderedAdaptiveCard : IInspectable
    {
        [propget] HRESULT OriginatingCard([out, retval] AdaptiveCard** value);

        [propget] HRESULT FrameworkElement([out, retval] Windows.UI.Xaml.FrameworkElement** value);

        [propget] HRESULT UserInputs([out, retval] AdaptiveInputs** value);

        [propget] HRESULT Errors([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveError*>** value);

        [propget] HRESULT Warnings([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveWarning*>** value);

        [eventadd] HRESULT Action([in] Windows.Foundation.TypedEventHandler<RenderedAdaptiveCard*, AdaptiveActionEventArgs*>* pHandler, [out][retval] EventRegistrationToken* pToken);
        [eventremove] HRESULT Action([in] EventRegistrationToken token);
    };

    [
        version(NTDDI_WIN10_RS1),
        activatable(NTDDI_WIN10_RS1)
    ]
    runtimeclass RenderedAdaptiveCard
    {
        [default] interface IRenderedAdaptiveCard;
    };

    runtimeclass AdaptiveInputs
    {
        AdaptiveInputs();
        Windows.Data.Json.JsonObject AsJson();
        Windows.Foundation.Collections.ValueSet AsValueSet();
    };

    interface IAdaptiveElementParser : IInspectable
    {
        IAdaptiveCardElement FromJson(
            Windows.Data.Json.JsonObject inputJson,
            AdaptiveElementParserRegistration elementParsers,
            AdaptiveActionParserRegistration actionParsers);
    };

    runtimeclass AdaptiveElementParserRegistration
    {
        AdaptiveElementParserRegistration();
        void Set(String type, IAdaptiveElementParser parser);
        IAdaptiveElementParser Get(String type);
        void Remove(String type);
    };

    runtimeclass AdaptiveActionParserRegistration
    {
        AdaptiveActionParserRegistration();
        void Set(String type, IAdaptiveActionParser parser);
        IAdaptiveActionParser Get(String type);
        void Remove(String type);
    };

    interface IAdaptiveActionParser : IInspectable
    {
        IAdaptiveActionElement FromJson(
            Windows.Data.Json.JsonObject inputJson,
            AdaptiveElementParserRegistration elementParsers,
            AdaptiveActionParserRegistration actionParsers);
    };

    runtimeclass AdaptiveElementRendererRegistration
    {
        AdaptiveElementRendererRegistration();
        void Set(String type, IAdaptiveElementRenderer parser);
        IAdaptiveElementRenderer Get(String type);
        void Remove(String type);
    };

    runtimeclass AdaptiveActionInvoker
    {
        AdaptiveActionInvoker();
        void SendActionEvent(IAdaptiveActionElement actionElement);
    };

    interface IAdaptiveInputValue : IInspectable
    {
        IAdaptiveInputElement InputElement{ get; };
        String CurrentValue{ get; };
    };

    runtimeclass AdaptiveRenderContext
    {
        AdaptiveRenderContext();
        AdaptiveHostConfig HostConfig{ get; };
        AdaptiveElementRendererRegistration ElementRenderers{ get; };
        AdaptiveCardResourceResolvers ResourceResolvers{ get; };
        AdaptiveActionInvoker ActionInvoker{ get; };
        Windows.UI.Xaml.ResourceDictionary OverrideStyles{ get; };

        void AddInputValue(IAdaptiveInputValue inputValue);
        void AddError(ErrorStatusCode statusCode, String message);
        void AddWarning(WarningStatusCode statusCode, String message);
    };

    interface IAdaptiveElementRenderer : IInspectable
    {
        Windows.UI.Xaml.UIElement Render(IAdaptiveCardElement element, AdaptiveRenderContext context, AdaptiveRenderArgs renderArgs);
    };

    runtimeclass AdaptiveTextBlockRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveTextBlockRenderer();
    };

    runtimeclass AdaptiveImageRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveImageRenderer();
    };

    runtimeclass AdaptiveImageSetRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveImageSetRenderer();
    };

    runtimeclass AdaptiveContainerRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveContainerRenderer();
    };

    runtimeclass AdaptiveColumnRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveColumnRenderer();
    };

    runtimeclass AdaptiveColumnSetRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveColumnSetRenderer();
    };

    runtimeclass AdaptiveFactRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveFactRenderer();
    };

    runtimeclass AdaptiveChoiceSetInputRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveChoiceSetInputRenderer();
    };

    runtimeclass AdaptiveDateInputRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveDateInputRenderer();
    };

    runtimeclass AdaptiveNumberInputRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveNumberInputRenderer();
    };

    runtimeclass AdaptiveTextInputRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveTextInputRenderer();
    };

    runtimeclass AdaptiveTimeInputRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveTimeInputRenderer();
    };

    runtimeclass AdaptiveToggleInputRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveToggleInputRenderer();
    };

    runtimeclass AdaptiveFactSetRenderer : IAdaptiveElementRenderer, IAdaptiveElementParser
    {
        AdaptiveFactSetRenderer();
    };

    runtimeclass AdaptiveRenderArgs
    { 
        AdaptiveRenderArgs();
        ContainerStyle ContainerStyle;
        IInspectable ParentElement;
    };

    interface IAdaptiveError : IInspectable
    {
        ErrorStatusCode StatusCode{ get; };
        String Message{ get; };
    };

    runtimeclass AdaptiveError : IAdaptiveError
    {
        AdaptiveError();
    };

    interface IAdaptiveWarning : IInspectable
    {
        WarningStatusCode StatusCode{ get; };
        String Message{ get; };
    };

    runtimeclass AdaptiveWarning : IAdaptiveWarning
    {
        AdaptiveWarning();
    };

    runtimeclass WholeItemsPanel : Windows.UI.Xaml.Controls.Panel
    {
        WholeItemsPanel();
        String GetAltText();
        Boolean IsAllContentClippedOut();
        Boolean IsTruncated();
    };
}}}